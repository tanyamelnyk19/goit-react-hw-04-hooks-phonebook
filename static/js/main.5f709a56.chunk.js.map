{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/App/App.js","index.js","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","evt","preventDefault","contact","id","uuidv4","props","onSubmit","resetForm","this","className","s","form","label","input","type","pattern","title","required","onChange","button","Component","Filter","filter","handleFilter","Contact","ContactList","filteredName","deleteContact","map","onClick","App","contacts","contactsData","newContact","some","toLowerCase","alert","prevState","contactId","normalizedFilter","includes","prevProps","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","getFilteredName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f709a56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__xgUzW\",\"input\":\"ContactForm_input__2mJ9G\",\"button\":\"ContactForm_button__Jjh_G\"};","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(contact);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, handleChange } = this;\n    return (\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nexport default function Filter({ filter, handleFilter }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        onChange={handleFilter}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Contact({ name, number }) {\n  return (\n    <span>\n      {name}: {number}\n    </span>\n  );\n}\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Contact from '../Contact';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ filteredName, deleteContact }) {\n  return (\n    <ul>\n      {filteredName.map(({ id, name, number }) => (\n        <li className={s.contact} key={id}>\n          <Contact name={name} number={number} />\n          <button className={s.button} onClick={() => deleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  filteredName: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\nimport contactsData from '../../contactsData/contacts.json';\n\nclass App extends Component {\n  state = {\n    contacts: contactsData,\n    filter: '',\n  };\n\n  handleFilter = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  handleSubmit = newContact => {\n    const contactInPhonebook = this.state.contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n    );\n\n    if (contactInPhonebook) {\n      alert(`${newContact.name} is already in contacts.`);\n    } else {\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, newContact],\n        };\n      });\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  getFilteredName() {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filteredName = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n    return filteredName;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const { handleSubmit, handleFilter, deleteContact } = this;\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={handleSubmit} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} handleFilter={handleFilter} />\n        <ContactList\n          filteredName={this.getFilteredName()}\n          deleteContact={deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3S1Xl\",\"input\":\"Filter_input__GPKwf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__2wcA0\",\"button\":\"ContactList_button__3dWeC\"};"],"sourceRoot":""}